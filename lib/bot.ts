import { Bot, InlineKeyboard } from "https://deno.land/x/grammy@v1.32.0/mod.ts";
import { createClient } from '@supabase/supabase-js';
import { UserInfo } from './interface.ts'
import { genderM, genderW } from './functions.ts'



const supabaseUrl = 'https://rcqxjuvsqeintzrkapgj.supabase.co';
const supabaseKey = Deno.env.get("SUPABASE_KEY") || "";
const supabase = createClient(supabaseUrl, supabaseKey);

export const bot = new Bot(Deno.env.get("BOT_TOKEN") || "");

const info: UserInfo = {
    id: 0,
    name: "",
    gender: "",
    age: 0,
    hobby: [],
    coffeeshop: {
        latitude: 0,
        longitude: 0,
    },
    time: "",
    status: ""
};

bot.command(
    "start",
    (ctx) => {
        if (info.id == 0){
            ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüëã\n"+
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç RandomCoffeeBot.\n"+ 
            "–ß—Ç–æ —è —É–º–µ—é‚ùì\n"+ 
            "–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞–º –ª—é–¥–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –Ω–∞ –æ–±—â–∏–µ —Ç–µ–º—ã. –ê –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞ —á–∞—à–µ—á–∫–æ–π –≤ –ª—é–±–∏–º–æ–π –∫–æ—Ñ–µ–π–Ω–µ‚òï\n"+
            "–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã —Å –≤–∞–º–∏ –º–æ–≥–ª–∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É.\n"+
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /createprofile –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã.\n"+
            "–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. /help\n");
        } else {
            ctx.reply("–ü—Ä–∏–≤–µ—Çüëã\n"+
            "–î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å.");
        }
    }
);

bot.command(
    "about",
    (ctx) => ctx.reply("–ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π —Å —Å—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏, —Å–æ–∑–¥–∞–Ω —É—á–µ–Ω–∏–∫–∞–º–∏ 9 –∫–ª–∞—Å—Å–∞ –õ–∏—Ü–µ—è ‚Ññ54 –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–º –∫–∞—Ñ–µ–¥—Ä—ã –ü–ú–∏–§–ò –û–º–ì–¢–£ –≤–æ –≤—Ä–µ–º—è 6 —Å–µ–∑–æ–Ω–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —à–∫–æ–ª—ãüè´"),
);

bot.command(
    "help",
    (ctx) => ctx.reply("–ß—Ç–æ —è —É–º–µ—é:\n"+
    "‚ÑπÔ∏è /about - –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"+
    "üíæ /createprofile - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã\n"+
    "üë§ /myprofile - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã\n"+
    "üìù /editprofile - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã\n"+
    "üóëÔ∏è /deleteprofile - —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã\n"+
    "‚ùå–ó–∞–ø—Ä–µ—â–µ–Ω–æ:\n"+
    "üì¢–õ—é–±–æ–π –≤–∏–¥ —Ä–µ–∫–ª–∞–º—ã –≤ –∞–Ω–∫–µ—Ç–∞—Ö.\n"+
    "üîû–õ—é–±–æ–π 18+ –∫–æ–Ω—Ç–µ–Ω—Ç.\n"+
    "üá∑üá∫–õ—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏.\n"+
    "‚û§–õ—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π [–ø—Ä–∞–≤–∏–ª–∞–º–∏ Telegram](https://telegram.org/tos/ru/).\n"+
    "ü§¨–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏ –≤ –∞–Ω–∫–µ—Ç–µ.\n"+
    "‚úÖ–†–∞–∑—Ä–µ—à–µ–Ω–æ:\n"+
    "‚úâÔ∏è–ò—Å–∫–∞—Ç—å –ª—é–¥–µ–π –¥–ª—è –æ–±—â–µ–Ω–∏—è:)", { parse_mode: "Markdown" } ),
);

bot.command(
    "createprofile", async (ctx) => {
        if (info.id == 0){
            await ctx.reply("–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –∞–Ω–∫–µ—Ç—É. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è.");
            info.status = "createName";
        } else {
            ctx.reply("‚ö†Ô∏è–£ –≤–∞—Å —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞‚ö†Ô∏è");
        }
});

bot.command(
    "editprofile",
    (ctx) => {
        if (info.id != 0) {
        ctx.reply("–ß—Ç–æ–±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å?", { reply_markup: edit });
        } else {
            ctx.reply("‚ö†Ô∏è–£ –≤–∞—Å –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞‚ö†Ô∏è");
        }
    });

bot.command(
    "myprofile",
    (ctx) => {
    if (info.id != 0){
    ctx.reply("–°–µ–π—á–∞—Å –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:\n–ü—Ä–∏–≤–µ—Ç!\n"+
    `–ú–µ–Ω—è –∑–æ–≤—É—Ç ${info.name}.\n`+ 
    `–Ø ${info.gender}.\n`+ 
    `–ú–Ω–µ ${info.age}.\n`+
    `–ú–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è: ${info.hobby}.\n`+
    // `–ú–æ—è –ª—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è: ${JSON.stringify(info.coffeeshop)}\n`+
    `–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏: ${info.time}.\n`)
    } else{
        ctx.reply("‚ö†Ô∏è–£ –≤–∞—Å –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞‚ö†Ô∏è");
    }
});

const edit = new InlineKeyboard()
    .row().text("–ò–º—è", "name").text("–í–æ–∑—Ä–∞—Å—Ç", "age")
    .row().text("–ö–æ—Ñ–µ–π–Ω—è", "coffeeshop").text("–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏","time")
    .row().text("–£–≤–ª–µ—á–µ–Ω–∏—è", "hobby").text("–ù–∏—á–µ–≥–æ", "nothing")
    .row().text("–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "deleteprofile");

bot.callbackQuery("name", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è.");
    info.status = "editName";
});

bot.callbackQuery("age", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç.");
    info.status = "editAge";
});

bot.callbackQuery("time", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: —á—á:–º–º");
    info.status = "editTime";
});

bot.callbackQuery("hobby", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —É–≤–ª–µ—á–µ–Ω–∏—è.");
    info.status = "editHobby";
});

bot.callbackQuery("coffeeshop", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –∫–æ—Ñ–µ–π–Ω–∏ —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ Telegram.\nüìé-> üö©–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è");
    info.status = "editCoffeeshop";
});

bot.callbackQuery("nothing", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("ü§î");
})

bot.callbackQuery("deleteprofile", async (ctx) => {
    if(info.id != 0) {
        await ctx.answerCallbackQuery();
        await ctx.deleteMessage();
        await ctx.reply("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?", { reply_markup: YesNo });
    } else {
        ctx.reply("‚ö†Ô∏è–£ –≤–∞—Å –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞‚ö†Ô∏è");
    }
});

bot.command(
    "deleteprofile",
    (ctx) => {
        if (info.id != 0){
            ctx.reply("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?",{ reply_markup: YesNo });
        } else {
            ctx.reply("‚ö†Ô∏è–£ –≤–∞—Å –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞‚ö†Ô∏è");
        }
    });

const YesNo = new InlineKeyboard()
    .text("–î–∞‚úÖ", "yes")
    .text("–ù–µ—Ç‚ùå", "no")

bot.callbackQuery("yes", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    info.id = 0;
    info.name = "";
    info.gender = "";
    info.age = 0;
    info.hobby = [];
    info.coffeeshop = {
        latitude : 0,
        longitude : 0,
    };
    info.time = "";
    info.status = "";
    await ctx.reply("–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.");
})

bot.callbackQuery("no", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–•–æ—Ä–æ—à–æ. –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.");
})

const decision = new InlineKeyboard()
    .text("–°–æ–≥–ª–∞—Å–µ–Ωüëç", "accept")
    .text("–ü—Ä–æ—Ç–∏–≤üëé", "decline")

bot.callbackQuery("accept", async (ctx) =>{
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –ñ–µ–ª–∞—é –æ—Ç–ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è!");
});

bot.callbackQuery("decline", async (ctx) =>{
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–ñ–∞–ª—å... –ë—É–¥—É –∏—Å–∫–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.");
});

const gender = new InlineKeyboard()
    .text("–ú—É–∂—Å–∫–æ–πüë®‚Äçüíº", "man")
    .text("–ñ–µ–Ω—Å–∫–∏–πüë©‚Äçüíº", "woman")

bot.callbackQuery("man", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    info.gender = genderM(info.age);
    info.status = "createHobby";
    await ctx.reply("–•–æ—Ç–µ–ª–æ—Å—å –±—ã —É–∑–Ω–∞—Ç—å –æ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö, –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∏—Ö.");

});

bot.callbackQuery("woman", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    info.gender = genderW(info.age);
    info.status = "createHobby"; 
    await ctx.reply("–•–æ—Ç–µ–ª–æ—Å—å –±—ã —É–∑–Ω–∞—Ç—å –æ –≤–∞—à–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏—è—Ö, –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∏—Ö.");
});

bot.on("message", (ctx) =>{
    if (info.status) {
        switch (info.status) {

            case "createName":
                if (ctx.msg.text){
                    info.name = ctx.msg.text;
                    info.status = "createAge&Gender";
                    ctx.reply("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?");
                } else {                    
                    ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è.");
                }
                break;

            case "createAge&Gender":
                if (isNaN(Number(ctx.msg.text))){
                    ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä.");
                } else { 
                    if (Number(ctx.msg.text) < 10 || Number(ctx.msg.text) > 80){
                        ctx.reply("–°–æ–º–Ω–µ–≤–∞—é—Å—å, —á—Ç–æ –≤–∞–º —Å—Ç–æ–ª—å–∫–æ, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–∑—Ä–∞—Å—Çü§≠")
                    } else {
                        info.age = Number(ctx.msg.text);
                        ctx.reply("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª.", { reply_markup: gender });
                    }  
                }
                break;
            
            case "createHobby":
                if (ctx.msg.text){
                    info.hobby = ctx.msg.text.split(",");
                    info.status = "createCoffeeshop";
                    ctx.reply("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –≤–∞—à–µ–π –ª—é–±–∏–º–æ–π –∫–æ—Ñ–µ–π–Ω–∏ —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ Telegram.\nüìé-> üö©–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è");
                }
                break;

            case "createCoffeeshop":
                if (ctx.msg.location){
                    info.coffeeshop.latitude = ctx.msg.location.latitude;
                    info.coffeeshop.longitude = ctx.msg.location.longitude;
                    info.status = "createTime";
                    ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: —á—á:–º–º");
                } else {
                    ctx.reply("–£–∫–∞–∂–∏—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ Telegram.\nüìé-> üö©–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è");
                }
                break;

            case "createTime":
                if (ctx.msg.text){
                    const checkTime = ctx.msg.text.split(":")
                    if (0<=Number(checkTime[0]) && Number(checkTime[0])<24 && 0<=Number(checkTime[1]) && Number(checkTime[1])<60 ){
                        info.time = ctx.msg.text;
                        ctx.reply("–û—Ç–ª–∏—á–Ω–æü§©\n" +
                            "–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n"+
                            "–ü—Ä–∏–≤–µ—Ç!\n"+
                            `–ú–µ–Ω—è –∑–æ–≤—É—Ç ${info.name}.\n`+ 
                            `–Ø ${info.gender}.\n`+ 
                            `–ú–Ω–µ ${info.age}.\n`+
                            `–ú–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è: ${info.hobby}.\n`+
                            //`–ú–æ—è –ª—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è: ${JSON.stringify(info.coffeeshop)}\n`+
                            `–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏: ${info.time}.\n`);
                        info.status = "done";
                        info.id = 1;
                    } else {
                        ctx.reply("–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: —á—á:–º–º");
                    }
                };
                break;
            
            case "editName":
                if (ctx.msg.text){
                    info.name = ctx.msg.text;
                    info.status = "done";
                    ctx.reply("–í–∞—à–µ –∏–º—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ.");
                };
                break;
            
            case "editAge":
                if (isNaN(Number(ctx.msg.text))){
                    ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä.");
                } else { 
                    if (Number(ctx.msg.text) < 10 || Number(ctx.msg.text) > 80){
                        ctx.reply("–°–æ–º–Ω–µ–≤–∞—é—Å—å, —á—Ç–æ –≤–∞–º —Å—Ç–æ–ª—å–∫–æ, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–∑—Ä–∞—Å—Çü§≠")
                    } else {
                        info.age = Number(ctx.msg.text);
                        if (info.gender == "–¥–µ–≤—É—à–∫–∞" || "–¥–µ–≤–æ—á–∫–∞" || "–∂–µ–Ω—â–∏–Ω–∞"){
                            info.gender = genderW(info.age);
                        } 
                        if (info.gender == "–ø–∞—Ä–µ–Ω—å" || "–º–∞–ª—å—á–∏–∫" || "–º—É–∂—á–∏–Ω–∞") {
                            info.gender = genderM(info.age);
                        }
                        info.status = "done";
                        ctx.reply("–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω.");
                    }  
                }
                break;
            
            case "editHobby":
                if (ctx.msg.text){
                    info.hobby = ctx.msg.text.split(",");
                    info.status = "done";
                    ctx.reply("–í–∞—à–µ —É–≤–ª–µ—á–µ–Ω–∏—è –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã.");
                }
                    break;
            
            case "editCoffeeshop":
                if (ctx.msg.location){
                    info.coffeeshop.latitude = ctx.msg.location.latitude;
                    info.coffeeshop.longitude = ctx.msg.location.longitude;
                    info.status = "done";
                    ctx.reply("–í–∞—à–∞ –ª—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞.");
                } else {
                    ctx.reply("–£–∫–∞–∂–∏—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ Telegram.\nüìé-> üö©–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è");
                }
                break;
            
            case "editTime":
                if (ctx.msg.text){
                    const checkTime = ctx.msg.text.split(":")
                    if (0<=Number(checkTime[0]) && Number(checkTime[0])<24 && 0<=Number(checkTime[1]) && Number(checkTime[1])<60 ){
                        info.time = ctx.msg.text;
                        info.status = "done";
                        ctx.reply("–í—Ä–µ–º—è –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ.");
                    } else {
                        ctx.reply("–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: —á—á:–º–º")
                    }
                }
                break;

            default:
                break;   
        }
    }
});

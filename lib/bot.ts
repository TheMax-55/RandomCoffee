import { Bot, InlineKeyboard } from "https://deno.land/x/grammy@v1.32.0/mod.ts";

export const bot = new Bot(Deno.env.get("BOT_TOKEN") || "");
interface UserInfo {
    id: number;
    name: string;
    gender: string;
    age: number;
    hobby: string[];
    area: string;
    time: string;
}

const info: UserInfo = {
    id: 0,
    name: "",
    gender: "",
    age: 0,
    hobby: [],
    area: "",
    time: ""
};

bot.command(
    "start",
    (ctx) => ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüëã"+
        "\n–ú–µ–Ω—è –∑–æ–≤—É—Ç RandomCoffeeBot. –ß—Ç–æ —è —É–º–µ—é‚ùì"+ 
        "\n–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ª—é–¥–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –Ω–∞ –æ–±—â–∏–µ —Ç–µ–º—ã. –ê –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞ —á–∞—à–µ—á–∫–æ–π –≤ –ª—é–±–∏–º–æ–π –∫–æ—Ñ–µ–π–Ω–µ‚òï"), 
);

bot.command(
    "about",
    (ctx) => ctx.reply("–ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π —Å —Å—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏, —Å–æ–∑–¥–∞–Ω —É—á–µ–Ω–∏–∫–∞–º–∏ 9 –∫–ª–∞—Å—Å–∞ –õ–∏—Ü–µ—è ‚Ññ54 –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–º –∫–∞—Ñ–µ–¥—Ä—ã –ü–ú–∏–§–ò –û–º–ì–¢–£ –≤–æ –≤—Ä–µ–º—è 6 —Å–µ–∑–æ–Ω–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —à–∫–æ–ª—ãüè´"),
);

bot.command(
    "help",
    (ctx) => ctx.reply("–ß—Ç–æ —è —É–º–µ—é:"+
        "\n/about - –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"+
        "\n/createprofile - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã"+
        "\n/editprofile - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã"+
        "\n/myprofile - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã"+
        "\n/command4 - –æ–ø–∏—Å–∞–Ω–∏–µ4"+
        "\n/command5 - –æ–ø–∏—Å–∞–Ω–∏–µ5")
);

bot.command(
    "createprofile", 
        (ctx) => ctx.reply("–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –∞–Ω–∫–µ—Ç—É."),
);

bot.command(
    "editprofile",
    (ctx) => ctx.reply("–ß—Ç–æ–±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å?", { reply_markup: edit })
)

bot.command(
    "myprofile",
    (ctx) => ctx.reply("")
)

const edit = new InlineKeyboard()
    .text("–ò–º—è", "/name")
    .text("\n–í–æ–∑—Ä–∞—Å—Ç", "/age")
    .text("\n–†–∞–π–æ–Ω", "/area")
    .text("\n–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏—è ", "/time")
    .text("\n–£–≤–ª–µ—á–µ–Ω–∏—è ", "/hobby")
    //.text("–õ—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è", "/coffeeshop")
    

bot.callbackQuery("/name", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–ò–º—è");
});

bot.callbackQuery("/name", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–æ–∑—Ä–∞—Å—Ç");
});

bot.callbackQuery("/area", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–∞—à —Ä–∞–π–æ–Ω");
});

bot.callbackQuery("/time", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏");
});

bot.callbackQuery("/hobby", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–∞—à–∏ —É–≤–ª–µ—á–µ–Ω–∏—è");
});

bot.callbackQuery("/coffeeshop", async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–í–∞—à–∞ –ª—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è");
});

const decision = new InlineKeyboard()
    .text("–°–æ–≥–ª–∞—Å–µ–Ωüëç", "/accept")
    .text("–ü—Ä–æ—Ç–∏–≤üëé", "/decline")

bot.callbackQuery("/accept", async (ctx) =>{
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–û—Ç–ª–∏—á–Ω–æ!");
});

bot.callbackQuery("/decline", async (ctx) =>{
    await ctx.answerCallbackQuery();
    await ctx.deleteMessage();
    await ctx.reply("–ñ–∞–ª—å... –ë—É–¥—É –∏—Å–∫–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.");
});
